{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/script.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/ui\"","webpack://exports/external \"util\""],"names":["require","toArray","UI","Group","pluginKey","connections","document","sketch","fromNative","context","page","selectedPage","docData","documentData","connectionsDatabase","command","valueForKey_onLayer_forPluginIdentifier","currentParentGroup","currentPage","currentArtboard","selection","currentGroup","lineAvailable","lineObject","sourceObject","objectsToConnect","checkForArrowGroup","count","y","firstObject","secondObject","z","layers","objectID","line","updateArrow","direction","middlePosX","firstLayerPosX","secondLayerPosX","middlePosY","firstLayerPosY","secondLayerPosY","path","NSBezierPath","bezierPath","moveToPoint","NSMakePoint","lineToPoint","MSShapeGroup","layerWithPath","MSPath","pathWithBezierPath","points","cornerRadius","setName","border","style","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","g","b","a","thickness","endMarkerType","connection","connectionsArray","i","length","push","setValue_forKey_onLayer_forPluginIdentifier","addLayers","group","parent","name","locked","moveToBack","message","updateArrows","updateLayerNames","settings","options","getSelectionFromUser","ok","value","log","checkConnections","defineArrowPoints","ID","frame","firstLayerPos","maxX","midY","secondLayerPos","minX","x","width","setIsFlippedVertical","height"],"mappings":";;;;;;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;eACoBA,mBAAO,CAAC,kBAAD,C;IAAnBC,O,YAAAA,O,EAER;AACA;AACA;;;AAEA,IAAIC,EAAE,GAAGF,mBAAO,CAAC,4BAAD,CAAhB;;AACA,IAAIG,KAAK,GAAGH,mBAAO,CAAC,8BAAD,CAAP,CAAsBG,KAAlC;;AACA,IAAMC,SAAS,GAAG,YAAlB;AACA,IAAIC,WAAW,GAAG,EAAlB;AACA,IAAMC,QAAQ,GAAGC,6CAAM,CAACC,UAAP,CAAkBC,OAAO,CAACH,QAA1B,CAAjB;AACA,IAAMI,IAAI,GAAGJ,QAAQ,CAACK,YAAtB;AACA,IAAIC,OAAO,GAAGH,OAAO,CAACH,QAAR,CAAiBO,YAAjB,EAAd;AACA,IAAIC,mBAAmB,GAAGL,OAAO,CAACM,OAAR,CAAgBC,uCAAhB,CAAwD,aAAxD,EAAuEJ,OAAvE,EAAgFR,SAAhF,CAA1B;AACA,IAAIa,kBAAkB,GAAGL,OAAO,CAACM,WAAR,GAAsBC,eAAtB,MAA2CP,OAAO,CAACM,WAAR,EAApE;AACA,IAAIE,SAAS,GAAGX,OAAO,CAACW,SAAxB;AACA,IAAIC,YAAJ,C,CAEA;;AACA,IAAIC,aAAa,GAAG,KAApB;AACA,IAAIC,UAAJ;AAEA,IAAIC,YAAJ,C,CAAiB;;AACjB,IAAIC,gBAAgB,GAAG,EAAvB,C,CAGA;AACA;AACA;;AAEe,2EAAW;AAExB;AACAC,oBAAkB;;AAElB,MAAGN,SAAS,CAACO,KAAV,KAAoB,CAAvB,EAAyB;AACvB;AACA;AACA;AAEA;AACA;AAEA,QAAGb,mBAAH,EAAwB;AACtB;AACA;AACA,WAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,mBAAmB,CAACa,KAApB,EAAnB,EAAgDC,CAAC,EAAjD,EAAoD;AAElD,YAAGC,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAtC,IAAqDA,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAA9F,EAA2G;AACzG;AAIA,cAAGA,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAvC,IAAsDC,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAAhG,EAA6G;AAC3G;AAEA;AAGA;AACA;AACA,iBAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,YAAY,CAACW,MAAb,GAAsBL,KAAtB,EAAnB,EAAkDI,CAAC,EAAnD,EAAsD;AACpD,kBAAGV,YAAY,CAACW,MAAb,GAAsBD,CAAtB,EAAyBE,QAAzB,MAAuCnB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBM,IAAjE,EAAuE;AACrE;AACAZ,6BAAa,GAAG,IAAhB;AACAC,0BAAU,GAAGF,YAAY,CAACW,MAAb,GAAsBD,CAAtB,CAAb;AACD;AACF;AACF;AACF,SArBD,MAqBO,CACL;AACD;AACF;AACF,KA9BD,MA8BO,CACL;AAID;;AAGD,QAAGT,aAAH,EAAkB;AAChB;AACAa,iBAAW,CAACN,WAAD,EAAcC,YAAd,EAA4BM,SAA5B,EAAuCF,IAAvC,CAAX;AAED,KAJD,MAIO;AACL;AAEA;AACA,UAAIG,UAAU,GAAG,CAACC,cAAc,GAAGC,eAAlB,IAAmC,CAApD;AACA,UAAIC,UAAU,GAAG,CAACC,cAAc,GAAGC,eAAlB,IAAmC,CAApD,CALK,CAOL;;AACA,UAAIC,IAAI,GAAGC,YAAY,CAACC,UAAb,EAAX,CARK,CAUL;;AACAF,UAAI,CAACG,WAAL,CAAiBC,WAAW,CAACT,cAAD,EAAgBG,cAAhB,CAA5B;AACAE,UAAI,CAACK,WAAL,CAAiBD,WAAW,CAACV,UAAD,EAAYI,cAAZ,CAA5B;AACAE,UAAI,CAACK,WAAL,CAAiBD,WAAW,CAACV,UAAD,EAAYK,eAAZ,CAA5B;AACAC,UAAI,CAACK,WAAL,CAAiBD,WAAW,CAACR,eAAD,EAAiBG,eAAjB,CAA5B,EAdK,CAgBL;;AACA,UAAIR,KAAI,GAAGe,YAAY,CAACC,aAAb,CAA2BC,MAAM,CAACC,kBAAP,CAA0BT,IAA1B,CAA3B,CAAX,CAjBK,CAmBL;;;AACA,UAAIU,MAAM,GAAGnB,KAAI,CAACF,MAAL,GAAcH,WAAd,GAA4BwB,MAA5B,EAAb;;AACAA,YAAM,CAAC,CAAD,CAAN,CAAUC,YAAV,GAAyB,EAAzB;AACAD,YAAM,CAAC,CAAD,CAAN,CAAUC,YAAV,GAAyB,EAAzB,CAtBK,CAwBL;;AACApB,WAAI,CAACqB,OAAL,CAAa,OAAb,EAzBK,CA2BL;;;AACA,UAAIC,MAAM,GAAGtB,KAAI,CAACuB,KAAL,GAAaC,kBAAb,CAAgC,CAAhC,CAAb;;AACAF,YAAM,CAACG,KAAP,GAAeC,OAAO,CAACC,uBAAR,CAAgC;AAACC,SAAC,EAAE,IAAJ;AAAUC,SAAC,EAAE,IAAb;AAAmBC,SAAC,EAAE,IAAtB;AAA4BC,SAAC,EAAE;AAA/B,OAAhC,CAAf;AACAT,YAAM,CAACU,SAAP,GAAmB,CAAnB;AACAhC,WAAI,CAACuB,KAAL,GAAaU,aAAb,GAA6B,CAA7B;;AAEA,UAAGrD,mBAAH,EAAuB;AACrBT,mBAAW,GAAGI,OAAO,CAACM,OAAR,CAAgBC,uCAAhB,CAAwD,aAAxD,EAAuEJ,OAAvE,EAAgFR,SAAhF,CAAd;AACD,OAnCI,CAqCL;AACA;;;AACA,UAAIgE,WAAU,GAAG;AACfvC,mBAAW,EAAGA,WADC;AAEfC,oBAAY,EAAGA,YAFA;AAGfM,iBAAS,EAAE,OAHI;AAIfF,YAAI,EAAGA,KAAI,CAACD,QAAL;AAJQ,OAAjB;AAOA,UAAIoC,gBAAgB,GAAG,EAAvB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjE,WAAW,CAACkE,MAAhC,EAAwCD,CAAC,EAAzC,EAA8C;AAC5CD,wBAAgB,CAACG,IAAjB,CAAsBnE,WAAW,CAACiE,CAAD,CAAjC;AACD;;AAEDD,sBAAgB,CAACG,IAAjB,CAAsBJ,WAAtB,EAnDK,CAqDL;;AACA3D,aAAO,CAACM,OAAR,CAAgB0D,2CAAhB,CAA4DJ,gBAA5D,EAA8E,aAA9E,EAA6FzD,OAA7F,EAAsGR,SAAtG,EAtDK,CAuDL;;AAIA,UAAGiB,YAAH,EAAgB;AACd;AACAA,oBAAY,CAACqD,SAAb,CAAuB,CAACxC,KAAD,CAAvB;AAED,OAJD,MAIO;AACL;AACA;AACA,YAAIyC,KAAK,GAAG,IAAIxE,KAAJ,CAAU;AACpByE,gBAAM,EAAE3D,kBADY;AAEpB4D,cAAI,EAAE,QAFc;AAGpBC,gBAAM,EAAE,IAHY;AAIpB9C,gBAAM,EAAE,CAACE,KAAD;AAJY,SAAV,CAAZ,CAHK,CAUL;;AACAyC,aAAK,CAACI,UAAN;AACD;AACF;AACF,GA/HD,MA+HO;AACL;AACAxE,iDAAM,CAACL,EAAP,CAAU8E,OAAV,CAAkB,oCAAlB;AACD;AACF,C,GAED;AACA;AACA;;AAEO,SAASC,YAAT,CAAsBxE,OAAtB,EAA+B;AACpC;AACA;AAEA;AAEA,OAAI,IAAImB,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,mBAAmB,CAACa,KAApB,EAAnB,EAAgDC,CAAC,EAAjD,EAAoD;AAElD,QAAGC,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAtC,IAAqDA,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAA9F,EAA2G;AACzG;AAEA,UAAGA,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAvC,IAAsDC,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAAhG,EAA6G;AAC3G;AAEA;AACA;AACA,aAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,YAAY,CAACW,MAAb,GAAsBL,KAAtB,EAAnB,EAAkDI,CAAC,EAAnD,EAAsD;AACpD,cAAGV,YAAY,CAACW,MAAb,GAAsBD,CAAtB,EAAyBE,QAAzB,MAAuCnB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBM,IAAjE,EAAuE;AACrE;AACAZ,yBAAa,GAAG,IAAhB;AACAC,sBAAU,GAAGF,YAAY,CAACW,MAAb,GAAsBD,CAAtB,CAAb;AACD;AACF;AACF;AACF;AACF;;AAGDxB,+CAAM,CAACL,EAAP,CAAU8E,OAAV,CAAkB,2BAAlB,EA5BoC,CA6BpC;AACD;AAEM,SAASE,gBAAT,CAA0BzE,OAA1B,EAAmC;AACxC,MAAMH,QAAQ,GAAGC,6CAAM,CAACC,UAAP,CAAkBC,OAAO,CAACH,QAA1B,CAAjB;AACAC,+CAAM,CAACL,EAAP,CAAU8E,OAAV,CAAkB,2BAAlB;AACD;AAEM,SAASG,QAAT,CAAkB1E,OAAlB,EAA2B;AAChC;AACA,MAAI2E,OAAO,GAAG,CAAC,YAAD,EAAe,YAAf,CAAd;AACA,MAAIhE,SAAS,GAAGlB,EAAE,CAACmF,oBAAH,CACd,yBADc,EACaD,OADb,CAAhB;AAIA,MAAIE,EAAE,GAAGlE,SAAS,CAAC,CAAD,CAAlB;AACA,MAAImE,KAAK,GAAGH,OAAO,CAAChE,SAAS,CAAC,CAAD,CAAV,CAAnB;;AAEA,MAAIkE,EAAJ,EAAQ;AACN;AACAE,OAAG,CAACD,KAAD,CAAH;AACD;AACF,C,CAGD;AACA;AACA;;AAEA,SAASE,gBAAT,CAA0B5D,WAA1B,EAAsCC,YAAtC,EAAoD;AAClD;AACA,MAAGhB,mBAAH,EAAwB;AACtB;AACA;AACA,SAAI,IAAIc,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGd,mBAAmB,CAACa,KAApB,EAAnB,EAAgDC,CAAC,EAAjD,EAAoD;AAElD,UAAGC,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAtC,IAAqDA,WAAW,IAAIf,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAA9F,EAA2G;AACzG;AAEA,YAAGA,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBC,WAAvC,IAAsDC,YAAY,IAAIhB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBE,YAAhG,EAA6G;AAC3G;AAEA;AACA;AACA,eAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,YAAY,CAACW,MAAb,GAAsBL,KAAtB,EAAnB,EAAkDI,CAAC,EAAnD,EAAsD;AACpD,gBAAGV,YAAY,CAACW,MAAb,GAAsBD,CAAtB,EAAyBE,QAAzB,MAAuCnB,mBAAmB,CAACc,CAAD,CAAnB,CAAuBM,IAAjE,EAAuE;AACrE;AACAZ,2BAAa,GAAG,IAAhB;AACAC,wBAAU,GAAGF,YAAY,CAACW,MAAb,GAAsBD,CAAtB,CAAb;AACD;AACF;AACF;AACF;AACF;AACF;AACF;;AAED,SAAS2D,iBAAT,GAA6B;AAE3B;AAGAlE,cAAY,GAAG;AACbmE,MAAE,EAAGvE,SAAS,CAAC,CAAD,CAAT,CAAaa,QAAb,EADQ;AACiB;AAC9B2D,SAAK,EAAExE,SAAS,CAAC,CAAD,CAAT,CAAawE,KAAb;AAFM,GAAf;AAKAJ,KAAG,CAAChE,YAAD,CAAH;AACAC,kBAAgB,GAAG,EAAnB;AAEA2C,YAAU,GAAG;AACXvC,eAAW,EAAGA,WADH;AAEXC,gBAAY,EAAGA,YAFJ;AAGXI,QAAI,EAAGA,IAAI,CAACD,QAAL,EAHI,CAMb;;AANa,GAAb;AAOA,MAAI4D,aAAa,GAAGzE,SAAS,CAAC,CAAD,CAAT,CAAawE,KAAb,EAApB;AACA,MAAItD,cAAc,GAAGuD,aAAa,CAACC,IAAd,EAArB;AACA,MAAIrD,cAAc,GAAGoD,aAAa,CAACE,IAAd,EAArB,CAtB2B,CAwB3B;AACA;AAEA;;AACA,MAAIC,cAAc,GAAG5E,SAAS,CAAC,CAAD,CAAT,CAAawE,KAAb,EAArB;AACA,MAAIrD,eAAe,GAAGyD,cAAc,CAACC,IAAf,EAAtB;AACA,MAAIvD,eAAe,GAAGsD,cAAc,CAACD,IAAf,EAAtB,CA9B2B,CA+B3B;;AACA,MAAIjE,YAAY,GAAGV,SAAS,CAAC,CAAD,CAAT,CAAaa,QAAb,EAAnB;AAGD;;AAGD,SAASP,kBAAT,GAA8B;AAC5B;AACA,OAAI,IAAI4C,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGrD,kBAAkB,CAACe,MAAnB,GAA4BL,KAA5B,EAAnB,EAAwD2C,CAAC,EAAzD,EAA4D;AAC1D,QAAGrD,kBAAkB,CAACe,MAAnB,GAA4BsC,CAA5B,EAA+BO,IAA/B,MAAyC,QAA5C,EAAsD;AACpD;AACAxD,kBAAY,GAAGJ,kBAAkB,CAACe,MAAnB,GAA4BsC,CAA5B,CAAf;AACD;AACF;AACF;;AAED,SAASnC,WAAT,CAAqBN,WAArB,EAAkCC,YAAlC,EAAgDM,SAAhD,EAA2DF,IAA3D,EAAiE;AAC/D;AACAX,YAAU,CAACqE,KAAX,GAAmBM,CAAnB,GAAuBL,aAAa,CAACC,IAAd,EAAvB;AACAvE,YAAU,CAACqE,KAAX,GAAmBO,KAAnB,GAA2BH,cAAc,CAACC,IAAf,KAAwBJ,aAAa,CAACC,IAAd,EAAnD;AACAvE,YAAU,CAACkC,KAAX,GAAmBU,aAAnB,GAAmC,CAAnC;;AAEA,MAAG0B,aAAa,CAACE,IAAd,KAAuBC,cAAc,CAACD,IAAf,EAA1B,EAAgD;AAC9C;AACAxE,cAAU,CAAC6E,oBAAX,CAAgC,KAAhC;AACA7E,cAAU,CAACqE,KAAX,GAAmBhE,CAAnB,GAAuBiE,aAAa,CAACE,IAAd,EAAvB;AACAxE,cAAU,CAACqE,KAAX,GAAmBS,MAAnB,GAA4BL,cAAc,CAACD,IAAf,KAAwBF,aAAa,CAACE,IAAd,EAApD;AAED,GAND,MAMO;AACL;AACAxE,cAAU,CAAC6E,oBAAX,CAAgC,IAAhC;AACA7E,cAAU,CAACqE,KAAX,GAAmBhE,CAAnB,GAAuBoE,cAAc,CAACD,IAAf,EAAvB;AACAxE,cAAU,CAACqE,KAAX,GAAmBS,MAAnB,GAA4BR,aAAa,CAACE,IAAd,KAAuBC,cAAc,CAACD,IAAf,EAAnD;AACD;AACF,C;;;;;;;;;;;ACrUD,mC;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,sC;;;;;;;;;;;ACAA,iC","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","import sketch from 'sketch'\nconst { toArray } = require('util')\n\n//\n//  Variables\n//\n\nlet UI = require('sketch/ui')\nlet Group = require('sketch/dom').Group\nconst pluginKey = \"flowArrows\"\nlet connections = []\nconst document = sketch.fromNative(context.document)\nconst page = document.selectedPage\nlet docData = context.document.documentData()\nlet connectionsDatabase = context.command.valueForKey_onLayer_forPluginIdentifier(\"connections\", docData, pluginKey)\nlet currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage()\nlet selection = context.selection\nlet currentGroup\n\n// Saying that there is no line\nlet lineAvailable = false\nlet lineObject\n\nlet sourceObject //firstObject\nlet objectsToConnect = []\n\n\n//\n//  Default Function\n//\n\nexport default function() {\n\n  // Check if we have \"Arrows\" group\n  checkForArrowGroup()\n\n  if(selection.count() > 1){\n    // When user selected more than one layer\n    // We need to define the connections and connection position\n    // defineArrowPoints()\n  \n    // if there is a line in Plugin Database, we are showing it\n    // lineObject = checkConnections(firstObject,secondObject)\n\n    if(connectionsDatabase) {\n      // if we have connectionDatabase for this document\n      // Need to check if we have this connection already\n      for(var y = 0; y < connectionsDatabase.count(); y++){\n        \n        if(firstObject == connectionsDatabase[y].firstObject || firstObject == connectionsDatabase[y].secondObject){\n          // if we found that we have this object in connection database already\n\n    \n          \n          if(secondObject == connectionsDatabase[y].firstObject || secondObject == connectionsDatabase[y].secondObject){\n            // if we found that we have this object in connection database already\n  \n            // Here we found connection and here we need to update position\n\n\n            // Do we have a line inside \"Arrows\" group?\n            // TODO: Need to add check system if we don't have group\n            for(var z = 0; z < currentGroup.layers().count(); z++){\n              if(currentGroup.layers()[z].objectID() == connectionsDatabase[y].line) {                      \n                // we have this line\n                lineAvailable = true\n                lineObject = currentGroup.layers()[z]\n              } \n            }\n          }\n        } else {\n          // no such object\n        }\n      }\n    } else {\n      // Fresh Start\n\n\n\n    }\n    \n    \n    if(lineAvailable) {\n      // if line is available we need to update it's position\n      updateArrow(firstObject, secondObject, direction, line) \n\n    } else {\n      // if we don't have a line, need to create a new one\n\n      // Middle Points\n      let middlePosX = (firstLayerPosX + secondLayerPosX)/2\n      let middlePosY = (firstLayerPosY + secondLayerPosY)/2\n\n      // Drawing a line\n      let path = NSBezierPath.bezierPath()\n    \n      // Adding points\n      path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY))\n      path.lineToPoint(NSMakePoint(middlePosX,firstLayerPosY))\n      path.lineToPoint(NSMakePoint(middlePosX,secondLayerPosY))\n      path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY))\n\n      // Painting the line\n      let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path))\n      \n      // Making middle points rounded\n      let points = line.layers().firstObject().points()\n      points[1].cornerRadius = 20\n      points[2].cornerRadius = 20\n\n      // Providing Settings for the arrow\n      line.setName(\"Arrow\")\n\n      // Styling Border Style\n      let border = line.style().addStylePartOfType(1)\n      border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1})\n      border.thickness = 2\n      line.style().endMarkerType = 2\n\n      if(connectionsDatabase){\n        connections = context.command.valueForKey_onLayer_forPluginIdentifier(\"connections\", docData, pluginKey)\n      }\n\n      // Adding current connection to the all connections\n      // Storage for current connection\n      let connection = {\n        firstObject : firstObject,\n        secondObject : secondObject,\n        direction: \"right\",\n        line : line.objectID()\n      }\n\n      let connectionsArray = []\n      for (let i = 0; i < connections.length; i ++) {\n        connectionsArray.push(connections[i])\n      }\n\n      connectionsArray.push(connection)\n\n      // Saving Connection Info to Sketch Plugin\n      context.command.setValue_forKey_onLayer_forPluginIdentifier(connectionsArray, \"connections\", docData, pluginKey)\n      // log(context.command.valueForKey_onLayer_forPluginIdentifier(\"connections\", docData, pluginKey))\n\n      \n\n      if(currentGroup){\n        // If we already have group\n        currentGroup.addLayers([line])\n\n      } else {\n        // If we don't have a group\n        // Creating a group\n        var group = new Group({\n          parent: currentParentGroup,\n          name: 'Arrows',\n          locked: true,\n          layers: [line]\n        })\n\n        // Moving this group to the bottom of the page\n        group.moveToBack()\n      }\n    }\n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers\")\n  }\n}\n\n//\n// Plugin Commands\n//\n\nexport function updateArrows(context) {\n  // TODO: Need to show amount of updated arrows and deleted ones\n  // TODO: Need to make a function that will delete arrows and connection itself, if there is no object\n\n  // TODO: Need to go through all the connections and check if we have all the object\n\n  for(var y = 0; y < connectionsDatabase.count(); y++){\n        \n    if(firstObject == connectionsDatabase[y].firstObject || firstObject == connectionsDatabase[y].secondObject){\n      // if we found that we have this object in connection database already\n      \n      if(secondObject == connectionsDatabase[y].firstObject || secondObject == connectionsDatabase[y].secondObject){\n        // if we found that we have this object in connection database already\n\n        // Do we have a line inside \"Arrows\" group?\n        // TODO: Need to add check system if we don't have group\n        for(var z = 0; z < currentGroup.layers().count(); z++){\n          if(currentGroup.layers()[z].objectID() == connectionsDatabase[y].line) {                      \n            // we have this line\n            lineAvailable = true\n            lineObject = currentGroup.layers()[z]\n          } \n        }\n      }\n    }\n  }\n\n\n  sketch.UI.message(\"All arrows are updated 🚀\")\n  // TO DO: Make a function for redrawing all the points\n}\n\nexport function updateLayerNames(context) {\n  const document = sketch.fromNative(context.document)\n  sketch.UI.message(\"All Layers are updated 🎉\")\n}\n\nexport function settings(context) {\n  // Shop Popup for asking arrow type\n  var options = ['Link Arrow', 'Back Arrow']\n  var selection = UI.getSelectionFromUser(\n    \"Please choose link type\", options\n  )\n\n  var ok = selection[2]\n  var value = options[selection[1]]\n  \n  if (ok) {\n    // If user specified decision\n    log(value)\n  }\n}\n\n\n//\n// Functions\n//\n\nfunction checkConnections(firstObject,secondObject) {\n  // Need to check if we have this information already\n  if(connectionsDatabase) {\n    // if we have connectionDatabase for this document\n    // Need to check if we have this connection already\n    for(var y = 0; y < connectionsDatabase.count(); y++){\n      \n      if(firstObject == connectionsDatabase[y].firstObject || firstObject == connectionsDatabase[y].secondObject){\n        // if we found that we have this object in connection database already\n        \n        if(secondObject == connectionsDatabase[y].firstObject || secondObject == connectionsDatabase[y].secondObject){\n          // if we found that we have this object in connection database already\n\n          // Do we have a line inside \"Arrows\" group?\n          // TODO: Need to add check system if we don't have group\n          for(var z = 0; z < currentGroup.layers().count(); z++){\n            if(currentGroup.layers()[z].objectID() == connectionsDatabase[y].line) {                      \n              // we have this line\n              lineAvailable = true\n              lineObject = currentGroup.layers()[z]\n            } \n          }\n        }\n      }\n    }\n  }\n}\n\nfunction defineArrowPoints() {\n\n  // TODO: Need to define direction\n  \n\n  sourceObject = {\n    ID : selection[0].objectID(), //firstObject\n    frame: selection[0].frame()\n  }\n\n  log(sourceObject)\n  objectsToConnect = []\n\n  connection = {\n    firstObject : firstObject,\n    secondObject : secondObject,\n    line : line.objectID()\n  }\n\n  // First Layer Position Start Point Position\n  let firstLayerPos = selection[0].frame()\n  let firstLayerPosX = firstLayerPos.maxX()\n  let firstLayerPosY = firstLayerPos.midY()\n  \n  // Saving object ID for not recreating new arrows\n  // var firstObject = selection[0].objectID()\n  \n  // Second Layer Position End Point Position\n  let secondLayerPos = selection[1].frame()\n  let secondLayerPosX = secondLayerPos.minX()\n  let secondLayerPosY = secondLayerPos.midY()\n  // Saving object ID for not recreating new arrows\n  var secondObject = selection[1].objectID()\n\n  \n}\n    \n\nfunction checkForArrowGroup() {\n  // Checking all the groups that we have\n  for(let i = 0; i < currentParentGroup.layers().count(); i++){\n    if(currentParentGroup.layers()[i].name() == \"Arrows\") {\n      // If we already have \"Arrow\" group we need to save it's folder\n      currentGroup = currentParentGroup.layers()[i]\n    } \n  }\n}\n\nfunction updateArrow(firstObject, secondObject, direction, line) {\n  // need to specify new size and location for the arrow shape\n  lineObject.frame().x = firstLayerPos.maxX()\n  lineObject.frame().width = secondLayerPos.minX() - firstLayerPos.maxX()\n  lineObject.style().endMarkerType = 2\n  \n  if(firstLayerPos.midY() < secondLayerPos.midY()){\n    // second object is higher\n    lineObject.setIsFlippedVertical(false)\n    lineObject.frame().y = firstLayerPos.midY()\n    lineObject.frame().height = secondLayerPos.midY() - firstLayerPos.midY()\n    \n  } else {\n    // second object is lower\n    lineObject.setIsFlippedVertical(true)\n    lineObject.frame().y = secondLayerPos.midY()\n    lineObject.frame().height = firstLayerPos.midY() - secondLayerPos.midY()\n  }\n}","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/ui\");","module.exports = require(\"util\");"],"sourceRoot":""}