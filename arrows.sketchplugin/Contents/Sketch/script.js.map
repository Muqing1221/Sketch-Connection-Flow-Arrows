{"version":3,"sources":["webpack://exports/webpack/bootstrap","webpack://exports/./src/script.js","webpack://exports/external \"sketch\"","webpack://exports/external \"sketch/dom\"","webpack://exports/external \"sketch/settings\"","webpack://exports/external \"sketch/ui\""],"names":["UI","require","pluginKey","document","sketch","fromNative","context","docData","documentData","pluginData","command","valueForKey_onLayer_forPluginIdentifier","currentParentGroup","currentPage","currentArtboard","newConnectionsData","getConnectionsData","Settings","arrowDirectionSetting","settingForKey","selection","count","sourceObjectID","getSourceObjectFromSelection","currentConnectionsData","g","objectID","connectionIndex","findConnectionData","updateArrow","firstObject","secondObject","line","message","createArrow","setValue_forKey_onLayer_forPluginIdentifier","updateSelectedArrows","updateArtboardArrows","connections","firstObjectArtboard","secondObjectArtboard","length","updateArrowsCounter","i","getLayerWithID","sketchObject","parentArtboard","class","direction","push","updateAllArrows","deleteAllArrows","deleteLine","deleteArtboardArrows","deleteConnectionFromData","deleteSelectedArrows","settings","alert","COSAlertWindow","new","viewWidth","viewHeight","alertSetup","view","NSView","alloc","initWithFrame","NSMakeRect","addAccessoryView","arrowDirectionLabel","alertLabel","addSubview","arrowDirectionField","NSPopUpButton","setActiveDirectionSetting","arrowDirectionInfoLabel","arrowSpacingLabel","arrowSpacingField","setActiveSpacingSetting","arrowSpacingInfoLabel","pluginInfoLabel","modalResponse","runModal","NSAlertFirstButtonReturn","setSettingForKey","views","subviews","title","onLayersMoved","action","actionContext","panel","ControlBar","NSPanel","init","setStyleMask","NSTitledWindowMask","NSFullSizeContentViewWindowMask","setTitleVisibility","NSWindowTitleHidden","setTitlebarAppearsTransparent","setFrame_display","setMovableByWindowBackground","setHasShadow","setLevel","NSFloatingWindowLevel","center","makeKeyAndOrderFront","nil","firstObjectID","secondObjectID","lineID","localDirection","getDirection","updateSpacing","currentGroup","checkForArrowGroup","drawLine","addToArrowsGroup","connection","layers","name","refactorLines","firstObjectMidX","frame","x","width","firstObjectMidY","y","height","secondObjectMidX","secondObjectMidY","diffX","diffY","absDiffX","Math","abs","absDiffY","firstLayerPosX","firstLayerPosY","secondLayerPosX","secondLayerPosY","middlePosX","middlePosY","path","NSBezierPath","bezierPath","moveToPoint","NSMakePoint","lineToPoint","MSShapeGroup","layerWithPath","MSPath","pathWithBezierPath","points","cornerRadius","setName","border","style","addStylePartOfType","color","MSColor","colorWithRGBADictionary","r","b","a","thickness","endMarkerType","addLayers","fixGeometryWithOptions","Group","group","parent","locked","moveToBack","dataArray","pluginDataConnections","data","arrayNumber","String","currentDirection","addItemWithTitle","lastItem","setState","currentSpacing","newConnections","lineObject","selectedGroup","remove","childObjectID","sourceObject","childObject","defineSourceObject","id","confirmationAlert","setMessageText","addButtonWithTitle","infoLabel","NSTextField","setStringValue","setSelectable","setDrawsBackground","setBezeled"],"mappings":"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","file":"script.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/script.js\");\n","import sketch from 'sketch'\n// const { toArray } = require('util')\n\n//\n//  Variables\n//\n\nlet UI = require('sketch/ui') \nconst pluginKey = \"flowArrows\"\nconst document = sketch.fromNative(context.document)\nlet docData = context.document.documentData()\nlet pluginData = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey) // TODO: Need to refactor\nlet currentParentGroup = docData.currentPage().currentArtboard() || docData.currentPage() // TODO: Might be a problem for multiple artboards\nlet newConnectionsData = getConnectionsData()\n\n// Settings\nvar Settings = require('sketch/settings')\nlet arrowDirectionSetting\n\nif(Settings.settingForKey(\"arrowDirection\")) {\n  arrowDirectionSetting = Settings.settingForKey('arrowDirection')\n} else {\n  arrowDirectionSetting = \"Auto\"\n}\n  \n\n//\n//  Default Function\n//\n\nexport default function(context) {\n\n  let selection = context.selection\n\n  if(selection.count() > 1){\n    // Need to find source object by ID first\n    let sourceObjectID = getSourceObjectFromSelection(selection)\n    let currentConnectionsData = newConnectionsData\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != sourceObjectID){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionData(sourceObjectID, selection[g].objectID(), currentConnectionsData)\n        // log(\"Index \"+connectionIndex)\n        if(connectionIndex != null){\n          // Because this is creating flow, we need to take the direction from user settings\n          updateArrow(currentConnectionsData[connectionIndex].firstObject, currentConnectionsData[connectionIndex].secondObject, arrowDirectionSetting, currentConnectionsData[connectionIndex].line, connectionIndex)\n          sketch.UI.message(\"Current connection is updated 🚀\")\n        } else {\n          // There is no connection with this two objects in our database\n          createArrow(sourceObjectID, selection[g].objectID(), arrowDirectionSetting)\n          sketch.UI.message(\"New connection is created 🚀\")\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n    // log(newConnectionsData)\n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers\")\n  }\n}\n\n//\n// Plugin Commands\n//\n\nexport function updateSelectedArrows(context) {\n\n  let selection = context.selection\n\n  if(selection.count() > 1){\n    // Need to find source object by ID first\n    let sourceObjectID = getSourceObjectFromSelection(selection)\n    let currentConnectionsData = newConnectionsData\n\n    for(let g = 0; g < selection.count(); g++) {\n      if(selection[g].objectID() != sourceObjectID){\n        // Then need to create or update connection arrow with each selection\n        let connectionIndex = findConnectionData(sourceObjectID, selection[g].objectID(), currentConnectionsData)\n\n        if(connectionIndex != null){\n          updateArrow(currentConnectionsData[connectionIndex].firstObject, currentConnectionsData[connectionIndex].secondObject, arrowDirectionSetting, currentConnectionsData[connectionIndex].line, connectionIndex)\n          sketch.UI.message(\"Current connection is updated 🚀\")\n        } \n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n    // log(newConnectionsData)\n  } else {\n    // When user didn't select anything\n    sketch.UI.message(\"Please select more than two layers\")\n  }\n}\n\nexport function updateArtboardArrows(context) {\n  // TODO: Need to show amount of updated arrows and deleted ones\n  let selection = context.selection\n  let connections = getConnectionsData()\n  let firstObjectArtboard\n  let secondObjectArtboard\n  \n  if(connections.length > 0){\n    // We have connections in database\n    const updateArrowsCounter = connections.length\n    for (let i = 0; i < updateArrowsCounter; i ++) {\n      // Need to check if the element is selected globally or from the artboard\n      firstObjectArtboard = document.getLayerWithID(connections[i].firstObject)\n      firstObjectArtboard = firstObjectArtboard.sketchObject.parentArtboard().objectID()\n\n      secondObjectArtboard = document.getLayerWithID(connections[i].secondObject)\n      secondObjectArtboard = secondObjectArtboard.sketchObject.parentArtboard().objectID()\n\n      if(selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\"){\n        // Need to go through each connection and update arrow position for specific artboard\n        \n        if (firstObjectArtboard == selection[0].objectID()){\n          if (secondObjectArtboard == selection[0].objectID()){\n            updateArrow(connections[i].firstObject, connections[i].secondObject, connections[i].direction, connections[i].line, i)\n          } else {newConnectionsData.push(connections[i])}\n        } else {\n          // If not just saving it\n          newConnectionsData.push(connections[i])\n        }\n      }\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n    sketch.UI.message(\"All arrows are updated 🚀\")\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to update\")\n  }\n\n  // log(newConnectionsData)\n}\n\nexport function updateAllArrows(context) { // TODO\n  // TODO: Need to show amount of updated arrows and deleted ones\n  let selection = context.selection\n  let connections = getConnectionsData()\n  let firstObjectArtboard\n  let secondObjectArtboard\n  \n  if(connections.length > 0){\n    // We have connections in database\n    const updateArrowsCounter = connections.length\n    for (let i = 0; i < updateArrowsCounter; i ++) {\n      // Need to go through each connection and update arrow position without artboards\n      // Need to check if current object don't have the parrent\n      updateArrow(connections[i].firstObject, connections[i].secondObject, connections[i].direction, connections[i].line, i)\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n    sketch.UI.message(\"All arrows are updated 🚀\")\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to update\")\n  }\n}\n\nexport function deleteAllArrows(context) {\n\n  if(newConnectionsData.length > 0){\n    // We have connections in database\n    for (let i = 0; i < newConnectionsData.length; i ++) {\n      // Need to go through each connection and update arrow position\n      deleteLine(newConnectionsData[i].line)\n    }\n    context.command.setValue_forKey_onLayer_forPluginIdentifier(null, \"arrowConnections\", docData, pluginKey)\n    sketch.UI.message(\"All arrows are deleted\")\n  } else {\n    // We don't have any connections to update\n    sketch.UI.message(\"There is nothing to delete\")\n  }\n}\n\nexport function deleteArtboardArrows(context) {\n  let selection = context.selection\n  let firstObject, secondObject\n\n  // Need to delete all the arrows only from selected artboard\n  if(selection.count() == 1 && selection[0].class() == \"MSArtboardGroup\"){\n    let connections = getConnectionsData()\n    \n    if(connections.length > 0){\n      // We have connections in database\n      const updateArrowsCounter = connections.length\n      for (let i = 0; i < updateArrowsCounter; i ++) {\n        // Need to go through each connection and check if it placed on selected artboard\n        firstObject = document.getLayerWithID(connections[i].firstObject)\n        secondObject = document.getLayerWithID(connections[i].secondObject)\n        if (firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n          if (secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n            deleteLine(connections[i].line)\n            newConnectionsData = deleteConnectionFromData(i)\n          }\n        }\n      }\n      context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n      sketch.UI.message(\"All arrows from selected artboard are deleted\")\n    } else {\n      // We don't have any connections to update\n      sketch.UI.message(\"There is nothing to delete\")\n    }\n  } else {\n    sketch.UI.message(\"Please select one artboard\")\n  }\n}\n\nexport function deleteSelectedArrows(context) {\n  let selection = context.selection\n  let firstObject, secondObject\n\n  // Need to delete all the arrows only from selected artboard\n  if(selection.count() == 2){\n\n    for(let g = 0; g < selection.count(); g++) {\n\n      if(selection[g].objectID() != selection[0].objectID()){ // It will never check 3rd connection\n        let connections = getConnectionsData()\n        \n        let connectionIndex = findConnectionData(selection[0].objectID(), selection[g].objectID(), connections)\n        // log(connectionIndex)\n        \n        if(connectionIndex != null){\n          // We have connections in database\n          deleteLine(connections[connectionIndex].line)\n          newConnectionsData = deleteConnectionFromData(connectionIndex)\n          const updateArrowsCounter = connections.length\n          for (let i = 0; i < updateArrowsCounter; i ++) {\n            // Need to go through each connection and check if it placed on selected artboard\n            firstObject = document.getLayerWithID(connections[i].firstObject)\n            secondObject = document.getLayerWithID(connections[i].secondObject)\n            if(firstObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n              if(secondObject.sketchObject.parentArtboard().objectID() == selection[0].objectID()){\n                deleteLine(connections[i].line)\n                newConnectionsData = deleteConnectionFromData(i)\n              }\n            }\n          }\n          context.command.setValue_forKey_onLayer_forPluginIdentifier(newConnectionsData, \"arrowConnections\", docData, pluginKey)\n          sketch.UI.message(\"All arrows from selected layers are deleted ✌️\")\n        }\n      }\n    }\n  } else {\n    sketch.UI.message(\"Select two layers, please 🧐\")\n  }\n}\n\nexport function settings(context) {\n  let alert = COSAlertWindow.new()\n  const viewWidth = 300\n  const viewHeight = 260\n  \n  // Alert window settingsnp\n  alert = alertSetup(alert, viewWidth, viewHeight)\n  let view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight))\n  alert.addAccessoryView(view)\n\n  // Label: Arrow Direction\n  let arrowDirectionLabel = alertLabel(\"Arrow Direction\", -1, viewHeight - 17, 330, 20)\n  view.addSubview(arrowDirectionLabel)\n    \n  // Select: Arrow Direction\n  let arrowDirectionField = NSPopUpButton.alloc().initWithFrame(NSMakeRect(-2, viewHeight - 40, 300, 20))\n  setActiveDirectionSetting(arrowDirectionField)\n  view.addSubview(arrowDirectionField)\n\n  // Label: Auto Direction Info\n  let arrowDirectionInfoLabel = alertLabel(\"ℹ️ Auto mode will draw arrow based on location of the second object\", -1, viewHeight-84, 280, 40)\n  view.addSubview(arrowDirectionInfoLabel)\n\n  // Label: Arrow Spacing\n  let arrowSpacingLabel = alertLabel(\"Arrow Spacing\", -1, viewHeight - 120, 330, 20)\n  view.addSubview(arrowSpacingLabel)\n\n  // Select: Arrow Spacing\n  let arrowSpacingField = NSPopUpButton.alloc().initWithFrame(NSMakeRect(-2, viewHeight - 143, 300, 20));\n  setActiveSpacingSetting(arrowSpacingField)\n  view.addSubview(arrowSpacingField)\n  \n  // Label: Auto Spacing Info\n  let arrowSpacingInfoLabel = alertLabel(\"ℹ️ If you will select spacing, the second layer position will be moved closer\", -1, viewHeight-187, 280, 40)\n  view.addSubview(arrowSpacingInfoLabel)\n\n  // Label: Plugin Info\n  let pluginInfoLabel = alertLabel(\"Made by Farid Sabitov with the support of EPAM.com ❤️\", -1, viewHeight-240, 280, 40)\n  view.addSubview(pluginInfoLabel)\n\n  // Show modal and get the results\n  let modalResponse = alert.runModal()\n\n  if(modalResponse == NSAlertFirstButtonReturn){\n    // When user clicks on \"Update Settings\"\n    // Need to save all this results into the Plugin Settings\n    Settings.setSettingForKey(\"arrowDirection\", alert.views()[0].subviews()[1].title())\n    Settings.setSettingForKey(\"arrowSpacing\", alert.views()[0].subviews()[4].title())\n    UI.message(\"Settings are updated 🚀\")\n  }\n}\n\nexport function onLayersMoved(context) {\n  sketch.UI.message(\"Please select more than two layers\")\n  // let a = 0\n  const action = context.actionContext\n  // log(context.actionContext)\n  // log(\"moved\")\n  \n}\n\nexport function panel(context) {\n  let ControlBar\n  ControlBar = NSPanel.alloc().init();\n  ControlBar.setStyleMask(NSTitledWindowMask + NSFullSizeContentViewWindowMask);\n  // ControlBar.setBackgroundColor(NSColor.colorWithRed_green_blue_alpha(0.99, 0.99, 0.99, 1));\n  ControlBar.setTitleVisibility(NSWindowTitleHidden);\n  ControlBar.setTitlebarAppearsTransparent(true);\n  ControlBar.setFrame_display(NSMakeRect(0, 0, 720, 50), false);\n  ControlBar.setMovableByWindowBackground(true);\n  ControlBar.setHasShadow(true);\n  ControlBar.setLevel(NSFloatingWindowLevel);\n\n  // contentView.addSubview(closeButton)\n  ControlBar.center();\n  ControlBar.makeKeyAndOrderFront(nil);\n\n//   getImage = function(size, name){\n//     var isRetinaDisplay = (NSScreen.mainScreen().backingScaleFactor() > 1)? true: false;\n//         suffix = (isRetinaDisplay)? \"@2x\": \"\",\n//         imageURL = NSURL.fileURLWithPath(self.pluginResources + \"/icons/\" + name + suffix + \".png\"),\n//         image = NSImage.alloc().initWithContentsOfURL(imageURL);\n//     return image\n// },\n// addButton = function(rect, name, callAction){\n//     var button = NSButton.alloc().initWithFrame(rect),\n//         image = getImage(rect.size, name);\n\n//     button.setImage(image);\n//     button.setBordered(false);\n//     button.sizeToFit();\n//     button.setButtonType(NSMomentaryChangeButton);\n//     button.setCOSJSTargetFunction(callAction);\n//     button.setAction(\"callAction:\");\n//     return button;\n// },\n// addImage = function(rect, name){\n//     var view = NSImageView.alloc().initWithFrame(rect),\n//         image = getImage(rect.size, name);\n//     view.setImage(image);\n//     return view;\n// },\n\n// closeButton = addButton( NSMakeRect(20, 10, 30, 30), \"close-control\",\n//     function(sender){\n//         coscript.setShouldKeepAround(false);\n//         threadDictionary.removeObjectForKey(identifier);\n//         ControlBar.close();\n// }),\n\n\n\n}\n\n\n//\n// Functions\n//\n\nfunction updateArrow(firstObjectID, secondObjectID, direction, lineID, connectionIndex) {\n  // There might be a situation, when user deleted current group or current group stays on another artboard => In that case need to create another group\n\n  // Need to check if we have the layers with such IDs\n  let firstObject = document.getLayerWithID(firstObjectID)\n  let secondObject = document.getLayerWithID(secondObjectID)\n\n  // Need to delete data first, because we will have a new line\n  deleteLine(lineID)\n  newConnectionsData = deleteConnectionFromData(connectionIndex)\n\n  if(firstObject && secondObject){\n    // If we have all the objects, we can recreate the line\n    createArrow(firstObjectID, secondObjectID, direction)\n  } \n}\n\nfunction createArrow(firstObjectID, secondObjectID, direction) {\n  // Process of creating new connection\n  let localDirection\n  \n  if(direction == \"Auto\"){\n    // If direction is auto, we need to specify direction ourselves\n    localDirection = getDirection(firstObjectID, secondObjectID)\n  } else {\n    localDirection = direction\n  }\n  \n  updateSpacing(firstObjectID, secondObjectID, localDirection)\n  let currentGroup = checkForArrowGroup()\n  let line = drawLine(firstObjectID, secondObjectID, localDirection, currentGroup)\n  addToArrowsGroup(line, currentGroup)\n\n  // Storage for current connection\n  let connection = {\n    firstObject : firstObjectID,\n    secondObject : secondObjectID,\n    direction: localDirection,\n    line : line.objectID()\n  }\n  // Need to save this data to the global array\n  newConnectionsData.push(connection)\n}\n\nfunction checkForArrowGroup() {\n  let currentGroup = null\n  // Checking all the groups that we have\n  for(let i = 0; i < currentParentGroup.layers().count(); i++){\n    if(currentParentGroup.layers()[i].name() == \"Arrows\") {\n      // If we already have \"Arrow\" group we need to save it's folder\n      currentGroup = currentParentGroup.layers()[i]\n      refactorLines(currentGroup)\n    } \n  }\n  return currentGroup\n}\n\nfunction getDirection(firstObjectID, secondObjectID){\n  // Get direction from the source object\n  const firstObject = document.getLayerWithID(firstObjectID)\n  const secondObject = document.getLayerWithID(secondObjectID)\n  const firstObjectMidX = firstObject.frame.x+firstObject.frame.width/2\n  const firstObjectMidY = firstObject.frame.y+firstObject.frame.height/2\n  const secondObjectMidX = secondObject.frame.x+secondObject.frame.width/2\n  const secondObjectMidY = secondObject.frame.y+secondObject.frame.height/2\n\n  const diffX = firstObjectMidX - secondObjectMidX\n  const diffY = firstObjectMidY - secondObjectMidY\n  const absDiffX = Math.abs(diffX) \n  const absDiffY = Math.abs(diffY)\n  let direction\n\n  if(secondObjectMidX > firstObjectMidX){\n    // Right Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      if(diffX > diffY) {\n        direction = \"Down\"\n      } else {\n        direction = \"Right\"\n      }\n    } else {\n      // Top quarter\n      if(absDiffX > absDiffY) {\n        direction = \"Right\"\n      } else {\n        direction = \"Up\"\n      }\n    }\n  } else {\n    // Left Half\n    if(secondObjectMidY > firstObjectMidY){\n      // Bottom quarter\n      if(absDiffX > absDiffY) {\n        direction = \"Left\"\n      } else {\n        direction = \"Down\"\n      }\n    } else {\n      // Top quarter\n      if(diffX > diffY) {\n        direction = \"Left\"\n      } else {\n        direction = \"Up\"\n      }\n    }\n  }\n  return direction\n}\n\nfunction drawLine(firstObjectID, secondObjectID, direction, currentGroup){\n  let firstLayerPosX, firstLayerPosY, secondLayerPosX, secondLayerPosY, middlePosX, middlePosY, diffX, diffY\n  let firstObject = document.getLayerWithID(firstObjectID)\n  let secondObject = document.getLayerWithID(secondObjectID)\n\n  \n  if(currentGroup){\n    //if we already have a group, need to specify the difference\n    diffX = currentGroup.frame().x()\n    diffY = currentGroup.frame().y()\n  } else {\n    diffX = 0\n    diffY = 0\n  }\n\n  // Drawing a line\n  let path = NSBezierPath.bezierPath()\n\n  \n  \n  // Based on direction, we need to specify connection points\n  if(direction == \"Up\"){\n    // First Layer Position Start Point Position\n    firstLayerPosX = firstObject.frame.x+firstObject.frame.width/2-diffX\n    firstLayerPosY = firstObject.frame.y-diffY\n\n    // Second Layer Position End Point Position\n    secondLayerPosX = secondObject.frame.x+secondObject.frame.width/2-diffX\n    secondLayerPosY = secondObject.frame.y+secondObject.frame.height-diffY\n\n    // Middle Points\n    middlePosX = (firstLayerPosX + secondLayerPosX)/2\n    middlePosY = (firstLayerPosY + secondLayerPosY)/2\n\n    // Connecting points\n    path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(firstLayerPosX,middlePosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,middlePosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY))\n  }\n\n  if(direction == \"Right\"){\n    // First Layer Position Start Point Position\n    firstLayerPosX = firstObject.frame.x+firstObject.frame.width-diffX\n    firstLayerPosY = firstObject.frame.y+firstObject.frame.height/2-diffY\n\n    // Second Layer Position End Point Position\n    secondLayerPosX = secondObject.frame.x-diffX\n    secondLayerPosY = secondObject.frame.y+secondObject.frame.height/2-diffY\n    \n    // Middle Points\n    middlePosX = (firstLayerPosX + secondLayerPosX)/2\n    middlePosY = (firstLayerPosY + secondLayerPosY)/2\n\n    // Connecting points\n    path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(middlePosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(middlePosX,secondLayerPosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY))\n  }\n\n  if(direction == \"Down\"){\n    // First Layer Position Start Point Position\n    firstLayerPosX = firstObject.frame.x+firstObject.frame.width/2-diffX\n    firstLayerPosY = firstObject.frame.y+firstObject.frame.height-diffY\n\n    // Second Layer Position End Point Position\n    secondLayerPosX = secondObject.frame.x+secondObject.frame.width/2-diffX\n    secondLayerPosY = secondObject.frame.y-diffY\n\n    // Middle Points\n    middlePosX = (firstLayerPosX + secondLayerPosX)/2\n    middlePosY = (firstLayerPosY + secondLayerPosY)/2\n    \n    // Connecting points\n    path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(firstLayerPosX,middlePosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,middlePosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY))\n  }\n\n  if(direction == \"Left\"){\n    // First Layer Position Start Point Position\n    firstLayerPosX = firstObject.frame.x-diffX\n    firstLayerPosY = firstObject.frame.y+firstObject.frame.height/2-diffY\n\n    // Second Layer Position End Point Position\n    secondLayerPosX = secondObject.frame.x+secondObject.frame.width-diffX\n    secondLayerPosY = secondObject.frame.y+secondObject.frame.height/2-diffY\n\n    // Middle Points\n    middlePosX = (firstLayerPosX + secondLayerPosX)/2\n    middlePosY = (firstLayerPosY + secondLayerPosY)/2\n\n    // Connecting points\n    path.moveToPoint(NSMakePoint(firstLayerPosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(middlePosX,firstLayerPosY))\n    path.lineToPoint(NSMakePoint(middlePosX,secondLayerPosY))\n    path.lineToPoint(NSMakePoint(secondLayerPosX,secondLayerPosY))\n  }\n\n  //TODO: Provide a separate file with all the stylings\n\n  // Painting the line\n  let line = MSShapeGroup.layerWithPath(MSPath.pathWithBezierPath(path))\n\n\n  // Making middle points rounded\n  let points = line.layers().firstObject().points()\n  points[1].cornerRadius = 20\n  points[2].cornerRadius = 20\n\n  // Providing Settings for the arrow\n  line.setName(\"Arrow\")\n\n  // Styling Border Style\n  let border = line.style().addStylePartOfType(1)\n  border.color = MSColor.colorWithRGBADictionary({r: 0.89, g: 0.89, b: 0.89, a: 1})\n  border.thickness = 2\n  line.style().endMarkerType = 2\n\n  return line\n}\n\nfunction addToArrowsGroup(line, currentGroup){\n  if(currentGroup){\n    currentGroup.addLayers([line])\n    currentGroup.fixGeometryWithOptions(1)\n  } else {\n    // If we don't have a group\n    let Group = require('sketch/dom').Group\n    let group = new Group({\n      parent: currentParentGroup,\n      name: 'Arrows',\n      locked: true,\n      layers: [line]\n    })\n    // Moving this group to the bottom of the page\n    group.moveToBack()\n    currentGroup = checkForArrowGroup()\n    currentGroup.fixGeometryWithOptions(1)\n  }\n\n  \n  \n}\n\nfunction getConnectionsData(){\n  let dataArray = []\n  let pluginDataConnections = []\n  if(pluginData){\n    pluginDataConnections = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey)\n    \n    for (let i = 0; i < pluginDataConnections.length; i ++) {\n      dataArray.push(pluginDataConnections[i])\n    }\n  } \n  return dataArray\n}\n\nfunction findConnectionData(firstObjectID, secondObjectID, data){\n  let arrayNumber = null\n  firstObjectID = String(firstObjectID)\n  secondObjectID = String(secondObjectID)\n\n  if(pluginData){\n    // If we have database, need to check for connections\n\n    for(let y = 0; y < data.length; y++){\n      // log(\"First one \"+firstObjectID)\n      // log(\"Current Index \"+y)\n\n      if(firstObjectID == data[y].firstObject || firstObjectID == data[y].secondObject){\n        // if we found that we have this object in connection database already\n        // log(\"We have the first one\")\n        // log(\"Second one \"+secondObjectID)\n        if(secondObjectID == data[y].firstObject || secondObjectID == data[y].secondObject){\n          // if we found that we have this object in connection database already\n          arrayNumber = y\n          // log(\"We have the second one as\"+arrayNumber)\n        } \n      }\n    }\n  }\n  return arrayNumber\n}\n\nfunction setActiveDirectionSetting (arrowDirectionField){\n  let currentDirection = \"Auto\"\n\n  if(Settings.settingForKey(\"arrowDirection\")){\n    // if there is data in settings\n    currentDirection = Settings.settingForKey(\"arrowDirection\")  \n    \n    if(currentDirection == \"Auto\"){\n      arrowDirectionField.addItemWithTitle(\"Auto\")\n      arrowDirectionField.lastItem().setState(1)\n      arrowDirectionField.addItemWithTitle(\"Right\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Down\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Left\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Up\")\n      arrowDirectionField.lastItem().setState(0)\n    } \n    \n    if(currentDirection == \"Right\"){\n      arrowDirectionField.addItemWithTitle(\"Right\")\n      arrowDirectionField.lastItem().setState(1)\n      arrowDirectionField.addItemWithTitle(\"Down\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Left\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Up\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Auto\")\n      arrowDirectionField.lastItem().setState(0)\n    } \n\n    if(currentDirection == \"Down\"){\n      arrowDirectionField.addItemWithTitle(\"Down\")\n      arrowDirectionField.lastItem().setState(1)\n      arrowDirectionField.addItemWithTitle(\"Left\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Up\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Auto\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Right\")\n      arrowDirectionField.lastItem().setState(0)\n    } \n\n    if(currentDirection == \"Left\"){\n      arrowDirectionField.addItemWithTitle(\"Left\")\n      arrowDirectionField.lastItem().setState(1)\n      arrowDirectionField.addItemWithTitle(\"Up\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Auto\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Right\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Down\")\n      arrowDirectionField.lastItem().setState(0)\n    } \n\n    if(currentDirection == \"Up\"){\n      arrowDirectionField.addItemWithTitle(\"Up\")\n      arrowDirectionField.lastItem().setState(1)\n      arrowDirectionField.addItemWithTitle(\"Auto\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Right\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Down\")\n      arrowDirectionField.lastItem().setState(0)\n      arrowDirectionField.addItemWithTitle(\"Left\")\n      arrowDirectionField.lastItem().setState(0)\n    } \n\n  } else {\n    // Show default\n    arrowDirectionField.addItemWithTitle(\"Auto\")\n    arrowDirectionField.addItemWithTitle(\"Right\")\n    arrowDirectionField.addItemWithTitle(\"Down\")\n    arrowDirectionField.addItemWithTitle(\"Left\")\n    arrowDirectionField.addItemWithTitle(\"Up\")\n  }\n}\n\nfunction setActiveSpacingSetting (arrowSpacingField){\n  let currentSpacing = \"Not selected\"\n\n  if(Settings.settingForKey(\"arrowSpacing\")){\n    // if there is data in settings\n    currentSpacing = Settings.settingForKey(\"arrowSpacing\")  \n    \n    if(currentSpacing == \"Not selected\"){\n      arrowSpacingField.addItemWithTitle(\"Not selected\")\n      arrowSpacingField.lastItem().setState(1)\n      arrowSpacingField.addItemWithTitle(\"30px\")\n      arrowSpacingField.lastItem().setState(0)\n      arrowSpacingField.addItemWithTitle(\"70px\")\n      arrowSpacingField.lastItem().setState(0)\n    } \n    \n    if(currentSpacing == \"30px\"){\n      arrowSpacingField.addItemWithTitle(\"30px\")\n      arrowSpacingField.lastItem().setState(1)\n      arrowSpacingField.addItemWithTitle(\"70px\")\n      arrowSpacingField.lastItem().setState(0)\n      arrowSpacingField.addItemWithTitle(\"Not selected\")\n      arrowSpacingField.lastItem().setState(0)\n    } \n\n    if(currentSpacing == \"70px\"){\n      arrowSpacingField.addItemWithTitle(\"70px\")\n      arrowSpacingField.lastItem().setState(1)\n      arrowSpacingField.addItemWithTitle(\"Not selected\")\n      arrowSpacingField.lastItem().setState(0)\n      arrowSpacingField.addItemWithTitle(\"30px\")\n      arrowSpacingField.lastItem().setState(0)\n    } \n  } else {\n    // Show default\n    arrowSpacingField.addItemWithTitle(\"Not Selected\")\n    arrowSpacingField.addItemWithTitle(\"30px\")\n    arrowSpacingField.addItemWithTitle(\"70px\")\n  }\n}\n\nfunction deleteConnectionFromData(arrayNumber){\n  let newConnections = []\n  if(pluginData){\n    // If we have database\n    let connections = context.command.valueForKey_onLayer_forPluginIdentifier(\"arrowConnections\", docData, pluginKey)\n\n    for (let i = 0; i < connections.length; i ++) {\n      // Updating all connections without deleted one\n      if(i != arrayNumber){\n        newConnections.push(connections[i])\n      }\n    }\n  }\n  return newConnections\n}\n\nfunction refactorLines(group){ // Need to finish\n  // log(group.layers().length)\n  for(let i = 0; i < group.layers().length; i++){\n    // log(group.layers()[i].objectID())\n    // Here we need to go through each data in our database and delete line if there is no data\n  }\n}\n\nfunction deleteLine(lineID){\n  const lineObject = document.getLayerWithID(lineID)\n  let selectedGroup\n\n  if(lineObject){\n    selectedGroup = lineObject.parent\n    lineObject.remove()\n    if(selectedGroup.layers.length == 0){\n      selectedGroup.remove()\n    }\n  }\n}\n\nfunction updateSpacing(sourceObjectID, childObjectID, direction){\n  let sourceObject = document.getLayerWithID(sourceObjectID)\n  let childObject = document.getLayerWithID(childObjectID)\n\n  if(Settings.settingForKey(\"arrowSpacing\")){\n    let currentSpacing = Settings.settingForKey(\"arrowSpacing\")\n    \n    if(direction == \"Right\"){\n      if(currentSpacing == \"30px\"){childObject.frame.x = sourceObject.frame.x + sourceObject.frame.width + 30}\n      if(currentSpacing == \"70px\"){childObject.frame.x = sourceObject.frame.x + sourceObject.frame.width + 70}\n    }\n  \n    if(direction == \"Down\"){\n      if(currentSpacing == \"30px\"){childObject.frame.y = sourceObject.frame.y + sourceObject.frame.height + 30}\n      if(currentSpacing == \"70px\"){childObject.frame.y = sourceObject.frame.y + sourceObject.frame.height + 70}\n    }\n  \n    if(direction == \"Left\"){\n      if(currentSpacing == \"30px\"){childObject.frame.x = sourceObject.frame.x - childObject.frame.width - 30}\n      if(currentSpacing == \"70px\"){childObject.frame.x = sourceObject.frame.x - childObject.frame.width - 70}\n    }\n  \n    if(direction == \"Up\"){\n      if(currentSpacing == \"30px\"){childObject.frame.y = sourceObject.frame.y - childObject.frame.height - 30}\n      if(currentSpacing == \"70px\"){childObject.frame.y = sourceObject.frame.y - childObject.frame.height - 70}\n    }\n  }\n}\n\nfunction defineSourceObject(firstObjectID, secondObjectID, direction){\n  let firstObject = document.getLayerWithID(firstObjectID)\n  let secondObject = document.getLayerWithID(secondObjectID)\n  let sourceObjectID\n\n  if(direction == \"Auto\"){\n    sourceObjectID = firstObject.id\n  }\n\n  if(direction == \"Right\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = firstObject.id\n    } else {\n      sourceObjectID = secondObject.id\n    }\n  }\n\n  if(direction == \"Down\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = firstObject.id\n    } else {\n      sourceObjectID = secondObject.id\n    }\n  }\n\n  if(direction == \"Left\"){\n    if(firstObject.frame.x <= secondObject.frame.x){\n      sourceObjectID = secondObject.id\n    } else {\n      sourceObjectID = firstObject.id\n    }\n  }\n\n  if(direction == \"Up\"){\n    if(firstObject.frame.y <= secondObject.frame.y){\n      sourceObjectID = secondObject.id\n    } else {\n      sourceObjectID = firstObject.id\n    }\n  }\n\n  return sourceObjectID\n}\n\nfunction getSourceObjectFromSelection(selection){\n  let sourceObjectID = selection.firstObject().objectID()\n  \n  if(arrowDirectionSetting != \"Auto\"){\n    for(let g = 0; g < selection.count(); g++) {\n      sourceObjectID = defineSourceObject(sourceObjectID, selection[g].objectID(), arrowDirectionSetting)\n    }\n  } else {\n    sourceObjectID = defineSourceObject(sourceObjectID, selection[0].objectID(), arrowDirectionSetting)\n  }\n \n  return sourceObjectID\n}\n\nfunction confirmationAlert(alert, message) {\n    // Title\n    alert.setMessageText(\"Would you like to delete all the arrows from \"+message)\n\n    // Creating dialog buttons\n    alert.addButtonWithTitle(\"Delete Arrows\")\n    alert.addButtonWithTitle(\"Cancel\")\n  \n    // Creating the view\n    const viewWidth = 300\n    const viewHeight = 40\n  \n    let view = NSView.alloc().initWithFrame(NSMakeRect(0, 0, viewWidth, viewHeight))\n    alert.addAccessoryView(view)\n  \n    // Label\n    var infoLabel = NSTextField.alloc().initWithFrame(NSMakeRect(-1, viewHeight - 40, 330, 40))\n  \n    infoLabel.setStringValue(\"ℹ️ You can select layers, artboards to delete all the arrows from selected one only\")\n    infoLabel.setSelectable(false)\n    infoLabel.setDrawsBackground(false)\n    infoLabel.setBezeled(false)\n  \n    view.addSubview(infoLabel)\n\n    return alert\n}\n\nfunction alertSetup(alert, viewWidth, viewHeight){\n  // Title\n  alert.setMessageText(\"Arrow Plugin Settings\")\n  \n  // Creating dialog buttons\n  alert.addButtonWithTitle(\"Update Settings\")\n  alert.addButtonWithTitle(\"Cancel\")\n  \n  return alert\n}\n\nfunction alertLabel(message, x, y, width, height){\n  var infoLabel = NSTextField.alloc().initWithFrame(NSMakeRect(x, y, width, height))\n\n  infoLabel.setStringValue(message)\n  infoLabel.setSelectable(false)\n  infoLabel.setDrawsBackground(false)\n  infoLabel.setBezeled(false)\n\n  return infoLabel\n}\n\n// {\n//   \"script\": \"./script.js\",\n//   \"name\" : \"onLayersMoved\",\n//   \"handlers\" : {\n//     \"actions\": {\n//       \"LayersMoved.finish\": \"onLayersMoved\"\n//     }\n//   },\n//   \"identifier\" : \"onLayersMoved\"\n// }","module.exports = require(\"sketch\");","module.exports = require(\"sketch/dom\");","module.exports = require(\"sketch/settings\");","module.exports = require(\"sketch/ui\");"],"sourceRoot":""}